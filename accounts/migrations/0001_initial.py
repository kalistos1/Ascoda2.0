# Generated by Django 5.0.1 on 2024-02-04 09:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('address', models.TextField()),
                ('motto', models.CharField(max_length=100)),
                ('logo', models.ImageField(upload_to='school')),
                ('email', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(blank=True, max_length=300, null=True)),
                ('facebook', models.CharField(blank=True, max_length=300, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'conference',
                'verbose_name_plural': 'conference',
                'db_table': 'conference',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('raw_password', models.CharField(default='abcd123', max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Treasurer', 'Treasurer'), ('Secretary', 'Secretary'), ('Financial_secreatary', 'Financial_secreatary')], max_length=50)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users')),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('district_id', models.AutoField(primary_key=True, serialize=False)),
                ('district_name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('email', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(blank=True, max_length=300, null=True)),
                ('facebook', models.CharField(blank=True, max_length=300, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=300, null=True)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.conference')),
            ],
            options={
                'verbose_name_plural': 'district',
                'db_table': 'district',
            },
        ),
        migrations.CreateModel(
            name='Church',
            fields=[
                ('church_id', models.AutoField(primary_key=True, serialize=False)),
                ('church_name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('email', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(blank=True, max_length=300, null=True)),
                ('facebook', models.CharField(blank=True, max_length=300, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=300, null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.district')),
            ],
            options={
                'verbose_name_plural': 'church',
                'db_table': 'church',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('member_name', models.CharField(max_length=255)),
                ('member_email', models.CharField(blank=True, max_length=300, null=True)),
                ('member_phone', models.CharField(blank=True, max_length=300, null=True)),
                ('member_Gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('church', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.church')),
            ],
            options={
                'verbose_name_plural': 'member',
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('quarter_id', models.AutoField(primary_key=True, serialize=False)),
                ('quarter_name', models.CharField(max_length=255)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.conference')),
            ],
            options={
                'verbose_name_plural': 'quater',
                'db_table': 'quater',
            },
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('month_id', models.AutoField(primary_key=True, serialize=False)),
                ('month_name', models.CharField(blank=True, max_length=255, null=True)),
                ('quarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.quarter')),
            ],
            options={
                'verbose_name_plural': 'Month',
                'db_table': 'Month',
            },
        ),
        migrations.CreateModel(
            name='Sabbath',
            fields=[
                ('sabbath_id', models.AutoField(primary_key=True, serialize=False)),
                ('sabbath_alias', models.CharField(blank=True, max_length=100, null=True)),
                ('sabbath_date', models.DateField()),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.month')),
            ],
            options={
                'verbose_name_plural': 'sabbath',
                'db_table': 'sabbath',
            },
        ),
    ]
